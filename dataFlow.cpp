#include "stdio.h"
//测试数据溢出  int 32位
//在c 中，左移也就是所说的逻辑移位，右端补0；而右移是算数移位，左端补的是最高位的符号位。
//故负数左移，有可能变成正数；正数左移，也有可能变成负数。
//但负数右移，肯定还是负数；正数右移，肯定还是正数。
int main(void){
		unsigned int a = 0x80000004;
	// 输出一个无符号的整数
		//输出十六进制表示
		printf("%u\n",a);
		printf("%x\n",a);

		//输出a/2
		//输出十六进制表示
		printf("%u\n",a>>1);
		printf("%x\n",a>>1);
		//输出a*2 ,高位溢出 结果为8
		//输出十六进制表示

		printf("%u\n",a<<1);
		printf("%x\n",a<<1);
	//输出带符号时的值
		int b = 0x80000004;
		//带符号时补码表示
		printf("%d\n",b);
		printf("%x\n",b);

		//右移b一位 高位补符号位
		printf("%d\n",b>>1);
		printf("%x\n",b>>1);

		//左移一位 符号位溢出 结果为正数数 结果溢出
		printf("%d\n",b<<1);
		printf("%x\n",b<<1);
	return 0;
}